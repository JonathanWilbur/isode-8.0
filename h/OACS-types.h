/* automatically generated by pepsy 8.0 #13 (ubuntu-vm), do not edit! */

#ifndef	_module_OACS_defined_
#define	_module_OACS_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#ifndef	PEPYPATH
#include <isode/psap.h>
#include <isode/pepsy.h>
#include <isode/pepsy/UNIV-types.h>
#else
#include "psap.h"
#include "pepsy.h"
#include "UNIV-types.h"
#endif



extern modtyp	_ZOACS_mod;
#define _ZAbortReasonOACS	12
#define _ZAbortInformationOACS	11
#define _ZSessionConnectionIdentifierOACS	5
#define _ZAdditionalReferenceInformationOACS	8
#define _ZRefuseReasonOACS	10
#define _ZPRefuseOACS	2
#define _ZSSAPAddressOACS	9
#define _ZDataTransferSyntaxOACS	3
#define _ZConnectionDataOACS	4
#define _ZPriorityOACS	13
#define _ZCommonReferenceOACS	7
#define _ZCallingSSUserReferenceOACS	6
#define _ZPAcceptOACS	1
#define _ZPConnectOACS	0

#ifndef	lint
#define encode_OACS_PConnect(pe, top, len, buffer, parm) \
    enc_f(_ZPConnectOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_PConnect(pe, top, len, buffer, parm) \
    dec_f(_ZPConnectOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_PConnect(pe, top, len, buffer, parm) \
    prnt_f(_ZPConnectOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_PConnect_P    _ZPConnectOACS, &_ZOACS_mod

#define encode_OACS_PAccept(pe, top, len, buffer, parm) \
    enc_f(_ZPAcceptOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_PAccept(pe, top, len, buffer, parm) \
    dec_f(_ZPAcceptOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_PAccept(pe, top, len, buffer, parm) \
    prnt_f(_ZPAcceptOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_PAccept_P    _ZPAcceptOACS, &_ZOACS_mod

#define encode_OACS_PRefuse(pe, top, len, buffer, parm) \
    enc_f(_ZPRefuseOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_PRefuse(pe, top, len, buffer, parm) \
    dec_f(_ZPRefuseOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_PRefuse(pe, top, len, buffer, parm) \
    prnt_f(_ZPRefuseOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_PRefuse_P    _ZPRefuseOACS, &_ZOACS_mod

#define encode_OACS_DataTransferSyntax(pe, top, len, buffer, parm) \
    enc_f(_ZDataTransferSyntaxOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_DataTransferSyntax(pe, top, len, buffer, parm) \
    dec_f(_ZDataTransferSyntaxOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_DataTransferSyntax(pe, top, len, buffer, parm) \
    prnt_f(_ZDataTransferSyntaxOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_DataTransferSyntax_P    _ZDataTransferSyntaxOACS, &_ZOACS_mod

#define encode_OACS_ConnectionData(pe, top, len, buffer, parm) \
    enc_f(_ZConnectionDataOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_ConnectionData(pe, top, len, buffer, parm) \
    dec_f(_ZConnectionDataOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_ConnectionData(pe, top, len, buffer, parm) \
    prnt_f(_ZConnectionDataOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_ConnectionData_P    _ZConnectionDataOACS, &_ZOACS_mod

#define encode_OACS_SessionConnectionIdentifier(pe, top, len, buffer, parm) \
    enc_f(_ZSessionConnectionIdentifierOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_SessionConnectionIdentifier(pe, top, len, buffer, parm) \
    dec_f(_ZSessionConnectionIdentifierOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_SessionConnectionIdentifier(pe, top, len, buffer, parm) \
    prnt_f(_ZSessionConnectionIdentifierOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_SessionConnectionIdentifier_P    _ZSessionConnectionIdentifierOACS, &_ZOACS_mod

#define encode_OACS_CallingSSUserReference(pe, top, len, buffer, parm) \
    enc_f(_ZCallingSSUserReferenceOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_CallingSSUserReference(pe, top, len, buffer, parm) \
    dec_f(_ZCallingSSUserReferenceOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_CallingSSUserReference(pe, top, len, buffer, parm) \
    prnt_f(_ZCallingSSUserReferenceOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_CallingSSUserReference_P    _ZCallingSSUserReferenceOACS, &_ZOACS_mod

#define encode_OACS_CommonReference(pe, top, len, buffer, parm) \
    enc_f(_ZCommonReferenceOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_CommonReference(pe, top, len, buffer, parm) \
    dec_f(_ZCommonReferenceOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_CommonReference(pe, top, len, buffer, parm) \
    prnt_f(_ZCommonReferenceOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_CommonReference_P    _ZCommonReferenceOACS, &_ZOACS_mod

#define encode_OACS_AdditionalReferenceInformation(pe, top, len, buffer, parm) \
    enc_f(_ZAdditionalReferenceInformationOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_AdditionalReferenceInformation(pe, top, len, buffer, parm) \
    dec_f(_ZAdditionalReferenceInformationOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_AdditionalReferenceInformation(pe, top, len, buffer, parm) \
    prnt_f(_ZAdditionalReferenceInformationOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_AdditionalReferenceInformation_P    _ZAdditionalReferenceInformationOACS, &_ZOACS_mod

#define encode_OACS_SSAPAddress(pe, top, len, buffer, parm) \
    enc_f(_ZSSAPAddressOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_SSAPAddress(pe, top, len, buffer, parm) \
    dec_f(_ZSSAPAddressOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_SSAPAddress(pe, top, len, buffer, parm) \
    prnt_f(_ZSSAPAddressOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_SSAPAddress_P    _ZSSAPAddressOACS, &_ZOACS_mod

#define encode_OACS_RefuseReason(pe, top, len, buffer, parm) \
    enc_f(_ZRefuseReasonOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_RefuseReason(pe, top, len, buffer, parm) \
    dec_f(_ZRefuseReasonOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_RefuseReason(pe, top, len, buffer, parm) \
    prnt_f(_ZRefuseReasonOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_RefuseReason_P    _ZRefuseReasonOACS, &_ZOACS_mod

#define encode_OACS_AbortInformation(pe, top, len, buffer, parm) \
    enc_f(_ZAbortInformationOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_AbortInformation(pe, top, len, buffer, parm) \
    dec_f(_ZAbortInformationOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_AbortInformation(pe, top, len, buffer, parm) \
    prnt_f(_ZAbortInformationOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_AbortInformation_P    _ZAbortInformationOACS, &_ZOACS_mod

#define encode_OACS_AbortReason(pe, top, len, buffer, parm) \
    enc_f(_ZAbortReasonOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_AbortReason(pe, top, len, buffer, parm) \
    dec_f(_ZAbortReasonOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_AbortReason(pe, top, len, buffer, parm) \
    prnt_f(_ZAbortReasonOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_AbortReason_P    _ZAbortReasonOACS, &_ZOACS_mod

#define encode_OACS_Priority(pe, top, len, buffer, parm) \
    enc_f(_ZPriorityOACS, &_ZOACS_mod, pe, top, len, buffer, (char *) parm)

#define parse_OACS_Priority(pe, top, len, buffer, parm) \
    dec_f(_ZPriorityOACS, &_ZOACS_mod, pe, top, len, buffer, (char **) parm)

#define print_OACS_Priority(pe, top, len, buffer, parm) \
    prnt_f(_ZPriorityOACS, &_ZOACS_mod, pe, top, len, buffer)
#define print_OACS_Priority_P    _ZPriorityOACS, &_ZOACS_mod


#endif   /* lint */

#define	type_OACS_PRefuse	type_OACS_RefuseReason
#define	free_OACS_PRefuse	free_OACS_RefuseReason

#define	type_OACS_CallingSSUserReference	type_OACS_SSAPAddress
#define	free_OACS_CallingSSUserReference	free_OACS_SSAPAddress

#define	type_OACS_CommonReference	type_UNIV_UTCTime
#define	free_OACS_CommonReference	free_UNIV_UTCTime

#define	type_OACS_AdditionalReferenceInformation	type_UNIV_T61String
#define	free_OACS_AdditionalReferenceInformation	free_UNIV_T61String

#define	type_OACS_SSAPAddress	type_UNIV_T61String
#define	free_OACS_SSAPAddress	free_UNIV_T61String

struct type_OACS_PConnect {
    struct type_OACS_DataTransferSyntax *member_OACS_0;

    struct member_OACS_1 {
        integer     optionals;
#define	opt_OACS_member_OACS_1_protocolVersion (000000001)

        integer     checkpointSize;

        integer     windowSize;

        integer     dialogueMode;
#define	int_OACS_dialogueMode_monologue	0
#define	int_OACS_dialogueMode_twa	1

        struct type_OACS_ConnectionData *member_OACS_2;

        integer     applicationProtocol;

        integer     protocolVersion;
    } *pUserData;
};
#define	free_OACS_PConnect(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZPConnectOACS], &_ZOACS_mod, 1)

struct type_OACS_PAccept {
    struct type_OACS_DataTransferSyntax *member_OACS_3;

    struct member_OACS_4 {
        integer     checkpointSize;

        integer     windowsize;

        struct type_OACS_ConnectionData *member_OACS_5;
    } *pUserData;
};
#define	free_OACS_PAccept(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZPAcceptOACS], &_ZOACS_mod, 1)

struct type_OACS_DataTransferSyntax {
    integer     parm;
#define	int_OACS_DataTransferSyntax_x409	0
};
#define	free_OACS_DataTransferSyntax(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZDataTransferSyntaxOACS], &_ZOACS_mod, 1)

struct type_OACS_ConnectionData {
    int         offset;
#define	type_OACS_ConnectionData_open	1
#define	type_OACS_ConnectionData_recover	2

    union {
        PE      open;

        struct type_OACS_SessionConnectionIdentifier *recover;
    }       un;
};
#define	free_OACS_ConnectionData(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZConnectionDataOACS], &_ZOACS_mod, 1)

struct type_OACS_SessionConnectionIdentifier {
    struct type_OACS_CallingSSUserReference *element_OACS_0;

    struct type_OACS_CommonReference *element_OACS_1;

    struct type_OACS_AdditionalReferenceInformation *element_OACS_2;
};
#define	free_OACS_SessionConnectionIdentifier(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZSessionConnectionIdentifierOACS], &_ZOACS_mod, 1)

struct type_OACS_RefuseReason {
    integer     parm;
#define	int_OACS_RefuseReason_busy	0
#define	int_OACS_RefuseReason_cannotRecover	1
#define	int_OACS_RefuseReason_validationFailure	2
#define	int_OACS_RefuseReason_unacceptableDialogueMode	3
};
#define	free_OACS_RefuseReason(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZRefuseReasonOACS], &_ZOACS_mod, 1)

struct type_OACS_AbortInformation {
    struct type_OACS_AbortReason *member_OACS_6;

    PE      reflectedParameter;
};
#define	free_OACS_AbortInformation(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZAbortInformationOACS], &_ZOACS_mod, 1)

struct type_OACS_AbortReason {
    integer     parm;
#define	int_OACS_AbortReason_localSystemProblem	0
#define	int_OACS_AbortReason_invalidParameter	1
#define	int_OACS_AbortReason_unrecognizedActivity	2
#define	int_OACS_AbortReason_temporaryProblem	3
#define	int_OACS_AbortReason_protocolError	4
};
#define	free_OACS_AbortReason(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZAbortReasonOACS], &_ZOACS_mod, 1)

struct type_OACS_Priority {
    integer     parm;
};
#define	free_OACS_Priority(parm)\
	 fre_obj((char *) parm, _ZOACS_mod.md_dtab[_ZPriorityOACS], &_ZOACS_mod, 1)
#endif
