/* automatically generated by pepsy 8.0 #17 (ubuntu-vm), do not edit! */

#ifndef	_module_FTAM_defined_
#define	_module_FTAM_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#ifndef	PEPYPATH
#include <isode/psap.h>
#include <isode/pepsy.h>
#include <isode/pepsy/UNIV-types.h>
#else
#include "psap.h"
#include "pepsy.h"
#include "UNIV-types.h"
#endif



extern modtyp	_ZFTAM_mod;
#define _ZContents_Type_AttributeFTAM	86
#define _ZConstraint_Set_NameFTAM	65
#define _ZAction_ResultFTAM	58
#define _ZF_TRANSFER_END_responseFTAM	48
#define _ZF_P_ABORT_requestFTAM	14
#define _ZSelect_AttributesFTAM	75
#define _ZF_RECOVER_responseFTAM	38
#define _ZF_RECOVER_requestFTAM	37
#define _ZF_CLOSE_responseFTAM	32
#define _ZF_DESELECT_responseFTAM	19
#define _ZLegal_Qualification_AttributeFTAM	91
#define _ZFilename_AttributeFTAM	89
#define _ZF_CLOSE_requestFTAM	31
#define _ZContents_Type_ListFTAM	10
#define _ZFile_Availability_AttributeFTAM	88
#define _ZUser_IdentityFTAM	78
#define _ZF_LOCATE_responseFTAM	40
#define _ZF_OPEN_requestFTAM	29
#define _ZF_WRITE_requestFTAM	45
#define _ZF_READ_requestFTAM	44
#define _ZPermitted_Actions_AttributeFTAM	92
#define _ZAccess_ContextFTAM	54
#define _ZAttribute_GroupsFTAM	8
#define _ZAccess_Control_AttributeFTAM	79
#define _ZF_INITIALIZE_requestFTAM	2
#define _ZRead_AttributesFTAM	74
#define _ZDocument_Type_NameFTAM	69
#define _ZDiagnosticFTAM	67
#define _ZAbstract_Syntax_NameFTAM	53
#define _ZService_ClassFTAM	6
#define _ZPDUFTAM	0
#define _ZState_ResultFTAM	77
#define _ZEntity_ReferenceFTAM	68
#define _ZLockFTAM	64
#define _ZAttribute_NamesFTAM	25
#define _ZF_READ_ATTRIB_requestFTAM	24
#define _ZF_DELETE_responseFTAM	23
#define _ZF_TERMINATE_requestFTAM	11
#define _ZNode_NameFTAM	71
#define _ZF_READ_ATTRIB_responseFTAM	26
#define _ZF_TERMINATE_responseFTAM	12
#define _ZDate_and_Time_AttributeFTAM	87
#define _ZChange_AttributesFTAM	61
#define _ZAccess_RequestFTAM	56
#define _ZAccess_PasswordsFTAM	55
#define _ZF_CANCEL_requestFTAM	49
#define _ZF_SELECT_requestFTAM	16
#define _ZImplementation_InformationFTAM	5
#define _ZUser_Identity_AttributeFTAM	94
#define _ZAccount_AttributeFTAM	85
#define _ZApplication_Entity_TitleFTAM	60
#define _ZF_TRANSFER_END_requestFTAM	47
#define _ZFTAM_Quality_Of_ServiceFTAM	9
#define _ZFunctional_UnitsFTAM	7
#define _ZPrivate_Use_AttributeFTAM	93
#define _ZFADU_LockFTAM	72
#define _ZF_END_GROUP_requestFTAM	35
#define _ZF_CREATE_requestFTAM	20
#define _ZF_END_GROUP_responseFTAM	36
#define _ZF_CHANGE_ATTRIB_requestFTAM	27
#define _ZF_BEGIN_GROUP_requestFTAM	33
#define _ZF_DESELECT_requestFTAM	18
#define _ZF_U_ABORT_requestFTAM	13
#define _ZAccess_Control_Change_AttributeFTAM	80
#define _ZAccountFTAM	57
#define _ZF_OPEN_responseFTAM	30
#define _ZConcurrency_AccessFTAM	83
#define _ZF_BEGIN_GROUP_responseFTAM	34
#define _ZF_CHANGE_ATTRIB_responseFTAM	28
#define _ZF_LOCATE_requestFTAM	39
#define _ZF_ERASE_responseFTAM	42
#define _ZChargingFTAM	62
#define _ZActivity_IdentifierFTAM	59
#define _ZF_ERASE_requestFTAM	41
#define _ZFilesize_AttributeFTAM	90
#define _ZAccess_Control_ElementFTAM	82
#define _ZShared_ASE_InformationFTAM	76
#define _ZFADU_IdentityFTAM	70
#define _ZF_DATA_END_requestFTAM	46
#define _ZBulk_Data_PDUFTAM	43
#define _ZProtocol_VersionFTAM	4
#define _ZF_INITIALIZE_responseFTAM	3
#define _ZAccess_Control_ListFTAM	81
#define _ZPasswordFTAM	73
#define _ZF_RESTART_END_requestFTAM	51
#define _ZF_DELETE_requestFTAM	22
#define _ZFTAM_Regime_PDUFTAM	1
#define _ZF_RESTART_END_responseFTAM	52
#define _ZF_CANCEL_responseFTAM	50
#define _ZF_SELECT_responseFTAM	17
#define _ZConcurrency_KeyFTAM	84
#define _ZCreate_AttributesFTAM	66
#define _ZConcurrency_ControlFTAM	63
#define _ZF_CREATE_responseFTAM	21
#define _ZFile_PDUFTAM	15

#ifndef	lint
#define encode_FTAM_PDU(pe, top, len, buffer, parm) \
    enc_f(_ZPDUFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_PDU(pe, top, len, buffer, parm) \
    dec_f(_ZPDUFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_PDU(pe, top, len, buffer, parm) \
    prnt_f(_ZPDUFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_PDU_P    _ZPDUFTAM, &_ZFTAM_mod

#define encode_FTAM_FTAM__Regime__PDU(pe, top, len, buffer, parm) \
    enc_f(_ZFTAM_Regime_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_FTAM__Regime__PDU(pe, top, len, buffer, parm) \
    dec_f(_ZFTAM_Regime_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_FTAM__Regime__PDU(pe, top, len, buffer, parm) \
    prnt_f(_ZFTAM_Regime_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_FTAM__Regime__PDU_P    _ZFTAM_Regime_PDUFTAM, &_ZFTAM_mod

#define encode_FTAM_F__INITIALIZE__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_INITIALIZE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__INITIALIZE__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_INITIALIZE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__INITIALIZE__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_INITIALIZE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__INITIALIZE__request_P    _ZF_INITIALIZE_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__INITIALIZE__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_INITIALIZE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__INITIALIZE__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_INITIALIZE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__INITIALIZE__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_INITIALIZE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__INITIALIZE__response_P    _ZF_INITIALIZE_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_Protocol__Version(pe, top, len, buffer, parm) \
    enc_f(_ZProtocol_VersionFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Protocol__Version(pe, top, len, buffer, parm) \
    dec_f(_ZProtocol_VersionFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Protocol__Version(pe, top, len, buffer, parm) \
    prnt_f(_ZProtocol_VersionFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Protocol__Version_P    _ZProtocol_VersionFTAM, &_ZFTAM_mod

#define encode_FTAM_Implementation__Information(pe, top, len, buffer, parm) \
    enc_f(_ZImplementation_InformationFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Implementation__Information(pe, top, len, buffer, parm) \
    dec_f(_ZImplementation_InformationFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Implementation__Information(pe, top, len, buffer, parm) \
    prnt_f(_ZImplementation_InformationFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Implementation__Information_P    _ZImplementation_InformationFTAM, &_ZFTAM_mod

#define encode_FTAM_Service__Class(pe, top, len, buffer, parm) \
    enc_f(_ZService_ClassFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Service__Class(pe, top, len, buffer, parm) \
    dec_f(_ZService_ClassFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Service__Class(pe, top, len, buffer, parm) \
    prnt_f(_ZService_ClassFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Service__Class_P    _ZService_ClassFTAM, &_ZFTAM_mod

#define encode_FTAM_Functional__Units(pe, top, len, buffer, parm) \
    enc_f(_ZFunctional_UnitsFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Functional__Units(pe, top, len, buffer, parm) \
    dec_f(_ZFunctional_UnitsFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Functional__Units(pe, top, len, buffer, parm) \
    prnt_f(_ZFunctional_UnitsFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Functional__Units_P    _ZFunctional_UnitsFTAM, &_ZFTAM_mod

#define encode_FTAM_Attribute__Groups(pe, top, len, buffer, parm) \
    enc_f(_ZAttribute_GroupsFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Attribute__Groups(pe, top, len, buffer, parm) \
    dec_f(_ZAttribute_GroupsFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Attribute__Groups(pe, top, len, buffer, parm) \
    prnt_f(_ZAttribute_GroupsFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Attribute__Groups_P    _ZAttribute_GroupsFTAM, &_ZFTAM_mod

#define encode_FTAM_FTAM__Quality__Of__Service(pe, top, len, buffer, parm) \
    enc_f(_ZFTAM_Quality_Of_ServiceFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_FTAM__Quality__Of__Service(pe, top, len, buffer, parm) \
    dec_f(_ZFTAM_Quality_Of_ServiceFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_FTAM__Quality__Of__Service(pe, top, len, buffer, parm) \
    prnt_f(_ZFTAM_Quality_Of_ServiceFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_FTAM__Quality__Of__Service_P    _ZFTAM_Quality_Of_ServiceFTAM, &_ZFTAM_mod

#define encode_FTAM_Contents__Type__List(pe, top, len, buffer, parm) \
    enc_f(_ZContents_Type_ListFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Contents__Type__List(pe, top, len, buffer, parm) \
    dec_f(_ZContents_Type_ListFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Contents__Type__List(pe, top, len, buffer, parm) \
    prnt_f(_ZContents_Type_ListFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Contents__Type__List_P    _ZContents_Type_ListFTAM, &_ZFTAM_mod

#define encode_FTAM_F__TERMINATE__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_TERMINATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__TERMINATE__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_TERMINATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__TERMINATE__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_TERMINATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__TERMINATE__request_P    _ZF_TERMINATE_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__TERMINATE__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_TERMINATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__TERMINATE__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_TERMINATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__TERMINATE__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_TERMINATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__TERMINATE__response_P    _ZF_TERMINATE_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__U__ABORT__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_U_ABORT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__U__ABORT__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_U_ABORT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__U__ABORT__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_U_ABORT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__U__ABORT__request_P    _ZF_U_ABORT_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__P__ABORT__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_P_ABORT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__P__ABORT__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_P_ABORT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__P__ABORT__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_P_ABORT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__P__ABORT__request_P    _ZF_P_ABORT_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_File__PDU(pe, top, len, buffer, parm) \
    enc_f(_ZFile_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_File__PDU(pe, top, len, buffer, parm) \
    dec_f(_ZFile_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_File__PDU(pe, top, len, buffer, parm) \
    prnt_f(_ZFile_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_File__PDU_P    _ZFile_PDUFTAM, &_ZFTAM_mod

#define encode_FTAM_F__SELECT__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_SELECT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__SELECT__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_SELECT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__SELECT__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_SELECT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__SELECT__request_P    _ZF_SELECT_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__SELECT__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_SELECT_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__SELECT__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_SELECT_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__SELECT__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_SELECT_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__SELECT__response_P    _ZF_SELECT_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__DESELECT__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_DESELECT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__DESELECT__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_DESELECT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__DESELECT__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_DESELECT_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__DESELECT__request_P    _ZF_DESELECT_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__DESELECT__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_DESELECT_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__DESELECT__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_DESELECT_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__DESELECT__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_DESELECT_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__DESELECT__response_P    _ZF_DESELECT_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__CREATE__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_CREATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__CREATE__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_CREATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__CREATE__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_CREATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__CREATE__request_P    _ZF_CREATE_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__CREATE__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_CREATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__CREATE__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_CREATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__CREATE__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_CREATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__CREATE__response_P    _ZF_CREATE_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__DELETE__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_DELETE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__DELETE__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_DELETE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__DELETE__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_DELETE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__DELETE__request_P    _ZF_DELETE_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__DELETE__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_DELETE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__DELETE__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_DELETE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__DELETE__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_DELETE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__DELETE__response_P    _ZF_DELETE_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__READ__ATTRIB__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_READ_ATTRIB_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__READ__ATTRIB__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_READ_ATTRIB_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__READ__ATTRIB__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_READ_ATTRIB_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__READ__ATTRIB__request_P    _ZF_READ_ATTRIB_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_Attribute__Names(pe, top, len, buffer, parm) \
    enc_f(_ZAttribute_NamesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Attribute__Names(pe, top, len, buffer, parm) \
    dec_f(_ZAttribute_NamesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Attribute__Names(pe, top, len, buffer, parm) \
    prnt_f(_ZAttribute_NamesFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Attribute__Names_P    _ZAttribute_NamesFTAM, &_ZFTAM_mod

#define encode_FTAM_F__READ__ATTRIB__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_READ_ATTRIB_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__READ__ATTRIB__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_READ_ATTRIB_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__READ__ATTRIB__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_READ_ATTRIB_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__READ__ATTRIB__response_P    _ZF_READ_ATTRIB_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__CHANGE__ATTRIB__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_CHANGE_ATTRIB_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__CHANGE__ATTRIB__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_CHANGE_ATTRIB_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__CHANGE__ATTRIB__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_CHANGE_ATTRIB_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__CHANGE__ATTRIB__request_P    _ZF_CHANGE_ATTRIB_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__CHANGE__ATTRIB__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_CHANGE_ATTRIB_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__CHANGE__ATTRIB__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_CHANGE_ATTRIB_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__CHANGE__ATTRIB__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_CHANGE_ATTRIB_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__CHANGE__ATTRIB__response_P    _ZF_CHANGE_ATTRIB_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__OPEN__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_OPEN_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__OPEN__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_OPEN_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__OPEN__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_OPEN_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__OPEN__request_P    _ZF_OPEN_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__OPEN__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_OPEN_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__OPEN__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_OPEN_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__OPEN__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_OPEN_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__OPEN__response_P    _ZF_OPEN_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__CLOSE__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_CLOSE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__CLOSE__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_CLOSE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__CLOSE__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_CLOSE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__CLOSE__request_P    _ZF_CLOSE_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__CLOSE__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_CLOSE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__CLOSE__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_CLOSE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__CLOSE__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_CLOSE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__CLOSE__response_P    _ZF_CLOSE_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__BEGIN__GROUP__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_BEGIN_GROUP_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__BEGIN__GROUP__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_BEGIN_GROUP_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__BEGIN__GROUP__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_BEGIN_GROUP_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__BEGIN__GROUP__request_P    _ZF_BEGIN_GROUP_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__BEGIN__GROUP__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_BEGIN_GROUP_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__BEGIN__GROUP__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_BEGIN_GROUP_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__BEGIN__GROUP__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_BEGIN_GROUP_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__BEGIN__GROUP__response_P    _ZF_BEGIN_GROUP_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__END__GROUP__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_END_GROUP_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__END__GROUP__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_END_GROUP_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__END__GROUP__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_END_GROUP_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__END__GROUP__request_P    _ZF_END_GROUP_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__END__GROUP__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_END_GROUP_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__END__GROUP__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_END_GROUP_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__END__GROUP__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_END_GROUP_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__END__GROUP__response_P    _ZF_END_GROUP_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__RECOVER__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_RECOVER_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__RECOVER__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_RECOVER_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__RECOVER__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_RECOVER_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__RECOVER__request_P    _ZF_RECOVER_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__RECOVER__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_RECOVER_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__RECOVER__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_RECOVER_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__RECOVER__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_RECOVER_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__RECOVER__response_P    _ZF_RECOVER_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__LOCATE__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_LOCATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__LOCATE__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_LOCATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__LOCATE__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_LOCATE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__LOCATE__request_P    _ZF_LOCATE_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__LOCATE__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_LOCATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__LOCATE__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_LOCATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__LOCATE__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_LOCATE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__LOCATE__response_P    _ZF_LOCATE_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__ERASE__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_ERASE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__ERASE__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_ERASE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__ERASE__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_ERASE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__ERASE__request_P    _ZF_ERASE_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__ERASE__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_ERASE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__ERASE__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_ERASE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__ERASE__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_ERASE_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__ERASE__response_P    _ZF_ERASE_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_Bulk__Data__PDU(pe, top, len, buffer, parm) \
    enc_f(_ZBulk_Data_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Bulk__Data__PDU(pe, top, len, buffer, parm) \
    dec_f(_ZBulk_Data_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Bulk__Data__PDU(pe, top, len, buffer, parm) \
    prnt_f(_ZBulk_Data_PDUFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Bulk__Data__PDU_P    _ZBulk_Data_PDUFTAM, &_ZFTAM_mod

#define encode_FTAM_F__READ__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_READ_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__READ__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_READ_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__READ__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_READ_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__READ__request_P    _ZF_READ_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__WRITE__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_WRITE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__WRITE__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_WRITE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__WRITE__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_WRITE_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__WRITE__request_P    _ZF_WRITE_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__DATA__END__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_DATA_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__DATA__END__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_DATA_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__DATA__END__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_DATA_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__DATA__END__request_P    _ZF_DATA_END_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__TRANSFER__END__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_TRANSFER_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__TRANSFER__END__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_TRANSFER_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__TRANSFER__END__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_TRANSFER_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__TRANSFER__END__request_P    _ZF_TRANSFER_END_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__TRANSFER__END__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_TRANSFER_END_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__TRANSFER__END__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_TRANSFER_END_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__TRANSFER__END__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_TRANSFER_END_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__TRANSFER__END__response_P    _ZF_TRANSFER_END_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__CANCEL__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_CANCEL_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__CANCEL__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_CANCEL_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__CANCEL__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_CANCEL_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__CANCEL__request_P    _ZF_CANCEL_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__CANCEL__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_CANCEL_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__CANCEL__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_CANCEL_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__CANCEL__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_CANCEL_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__CANCEL__response_P    _ZF_CANCEL_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_F__RESTART__END__request(pe, top, len, buffer, parm) \
    enc_f(_ZF_RESTART_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__RESTART__END__request(pe, top, len, buffer, parm) \
    dec_f(_ZF_RESTART_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__RESTART__END__request(pe, top, len, buffer, parm) \
    prnt_f(_ZF_RESTART_END_requestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__RESTART__END__request_P    _ZF_RESTART_END_requestFTAM, &_ZFTAM_mod

#define encode_FTAM_F__RESTART__END__response(pe, top, len, buffer, parm) \
    enc_f(_ZF_RESTART_END_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_F__RESTART__END__response(pe, top, len, buffer, parm) \
    dec_f(_ZF_RESTART_END_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_F__RESTART__END__response(pe, top, len, buffer, parm) \
    prnt_f(_ZF_RESTART_END_responseFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_F__RESTART__END__response_P    _ZF_RESTART_END_responseFTAM, &_ZFTAM_mod

#define encode_FTAM_Abstract__Syntax__Name(pe, top, len, buffer, parm) \
    enc_f(_ZAbstract_Syntax_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Abstract__Syntax__Name(pe, top, len, buffer, parm) \
    dec_f(_ZAbstract_Syntax_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Abstract__Syntax__Name(pe, top, len, buffer, parm) \
    prnt_f(_ZAbstract_Syntax_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Abstract__Syntax__Name_P    _ZAbstract_Syntax_NameFTAM, &_ZFTAM_mod

#define encode_FTAM_Access__Context(pe, top, len, buffer, parm) \
    enc_f(_ZAccess_ContextFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Access__Context(pe, top, len, buffer, parm) \
    dec_f(_ZAccess_ContextFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Access__Context(pe, top, len, buffer, parm) \
    prnt_f(_ZAccess_ContextFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Access__Context_P    _ZAccess_ContextFTAM, &_ZFTAM_mod

#define encode_FTAM_Access__Passwords(pe, top, len, buffer, parm) \
    enc_f(_ZAccess_PasswordsFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Access__Passwords(pe, top, len, buffer, parm) \
    dec_f(_ZAccess_PasswordsFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Access__Passwords(pe, top, len, buffer, parm) \
    prnt_f(_ZAccess_PasswordsFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Access__Passwords_P    _ZAccess_PasswordsFTAM, &_ZFTAM_mod

#define encode_FTAM_Access__Request(pe, top, len, buffer, parm) \
    enc_f(_ZAccess_RequestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Access__Request(pe, top, len, buffer, parm) \
    dec_f(_ZAccess_RequestFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Access__Request(pe, top, len, buffer, parm) \
    prnt_f(_ZAccess_RequestFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Access__Request_P    _ZAccess_RequestFTAM, &_ZFTAM_mod

#define encode_FTAM_Account(pe, top, len, buffer, parm) \
    enc_f(_ZAccountFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Account(pe, top, len, buffer, parm) \
    dec_f(_ZAccountFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Account(pe, top, len, buffer, parm) \
    prnt_f(_ZAccountFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Account_P    _ZAccountFTAM, &_ZFTAM_mod

#define encode_FTAM_Action__Result(pe, top, len, buffer, parm) \
    enc_f(_ZAction_ResultFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Action__Result(pe, top, len, buffer, parm) \
    dec_f(_ZAction_ResultFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Action__Result(pe, top, len, buffer, parm) \
    prnt_f(_ZAction_ResultFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Action__Result_P    _ZAction_ResultFTAM, &_ZFTAM_mod

#define encode_FTAM_Activity__Identifier(pe, top, len, buffer, parm) \
    enc_f(_ZActivity_IdentifierFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Activity__Identifier(pe, top, len, buffer, parm) \
    dec_f(_ZActivity_IdentifierFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Activity__Identifier(pe, top, len, buffer, parm) \
    prnt_f(_ZActivity_IdentifierFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Activity__Identifier_P    _ZActivity_IdentifierFTAM, &_ZFTAM_mod

#define encode_FTAM_Application__Entity__Title(pe, top, len, buffer, parm) \
    enc_f(_ZApplication_Entity_TitleFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Application__Entity__Title(pe, top, len, buffer, parm) \
    dec_f(_ZApplication_Entity_TitleFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Application__Entity__Title(pe, top, len, buffer, parm) \
    prnt_f(_ZApplication_Entity_TitleFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Application__Entity__Title_P    _ZApplication_Entity_TitleFTAM, &_ZFTAM_mod

#define encode_FTAM_Change__Attributes(pe, top, len, buffer, parm) \
    enc_f(_ZChange_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Change__Attributes(pe, top, len, buffer, parm) \
    dec_f(_ZChange_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Change__Attributes(pe, top, len, buffer, parm) \
    prnt_f(_ZChange_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Change__Attributes_P    _ZChange_AttributesFTAM, &_ZFTAM_mod

#define encode_FTAM_Charging(pe, top, len, buffer, parm) \
    enc_f(_ZChargingFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Charging(pe, top, len, buffer, parm) \
    dec_f(_ZChargingFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Charging(pe, top, len, buffer, parm) \
    prnt_f(_ZChargingFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Charging_P    _ZChargingFTAM, &_ZFTAM_mod

#define encode_FTAM_Concurrency__Control(pe, top, len, buffer, parm) \
    enc_f(_ZConcurrency_ControlFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Concurrency__Control(pe, top, len, buffer, parm) \
    dec_f(_ZConcurrency_ControlFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Concurrency__Control(pe, top, len, buffer, parm) \
    prnt_f(_ZConcurrency_ControlFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Concurrency__Control_P    _ZConcurrency_ControlFTAM, &_ZFTAM_mod

#define encode_FTAM_Lock(pe, top, len, buffer, parm) \
    enc_f(_ZLockFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Lock(pe, top, len, buffer, parm) \
    dec_f(_ZLockFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Lock(pe, top, len, buffer, parm) \
    prnt_f(_ZLockFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Lock_P    _ZLockFTAM, &_ZFTAM_mod

#define encode_FTAM_Constraint__Set__Name(pe, top, len, buffer, parm) \
    enc_f(_ZConstraint_Set_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Constraint__Set__Name(pe, top, len, buffer, parm) \
    dec_f(_ZConstraint_Set_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Constraint__Set__Name(pe, top, len, buffer, parm) \
    prnt_f(_ZConstraint_Set_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Constraint__Set__Name_P    _ZConstraint_Set_NameFTAM, &_ZFTAM_mod

#define encode_FTAM_Create__Attributes(pe, top, len, buffer, parm) \
    enc_f(_ZCreate_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Create__Attributes(pe, top, len, buffer, parm) \
    dec_f(_ZCreate_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Create__Attributes(pe, top, len, buffer, parm) \
    prnt_f(_ZCreate_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Create__Attributes_P    _ZCreate_AttributesFTAM, &_ZFTAM_mod

#define encode_FTAM_Diagnostic(pe, top, len, buffer, parm) \
    enc_f(_ZDiagnosticFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Diagnostic(pe, top, len, buffer, parm) \
    dec_f(_ZDiagnosticFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Diagnostic(pe, top, len, buffer, parm) \
    prnt_f(_ZDiagnosticFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Diagnostic_P    _ZDiagnosticFTAM, &_ZFTAM_mod

#define encode_FTAM_Entity__Reference(pe, top, len, buffer, parm) \
    enc_f(_ZEntity_ReferenceFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Entity__Reference(pe, top, len, buffer, parm) \
    dec_f(_ZEntity_ReferenceFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Entity__Reference(pe, top, len, buffer, parm) \
    prnt_f(_ZEntity_ReferenceFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Entity__Reference_P    _ZEntity_ReferenceFTAM, &_ZFTAM_mod

#define encode_FTAM_Document__Type__Name(pe, top, len, buffer, parm) \
    enc_f(_ZDocument_Type_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Document__Type__Name(pe, top, len, buffer, parm) \
    dec_f(_ZDocument_Type_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Document__Type__Name(pe, top, len, buffer, parm) \
    prnt_f(_ZDocument_Type_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Document__Type__Name_P    _ZDocument_Type_NameFTAM, &_ZFTAM_mod

#define encode_FTAM_FADU__Identity(pe, top, len, buffer, parm) \
    enc_f(_ZFADU_IdentityFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_FADU__Identity(pe, top, len, buffer, parm) \
    dec_f(_ZFADU_IdentityFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_FADU__Identity(pe, top, len, buffer, parm) \
    prnt_f(_ZFADU_IdentityFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_FADU__Identity_P    _ZFADU_IdentityFTAM, &_ZFTAM_mod

#define encode_FTAM_Node__Name(pe, top, len, buffer, parm) \
    enc_f(_ZNode_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Node__Name(pe, top, len, buffer, parm) \
    dec_f(_ZNode_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Node__Name(pe, top, len, buffer, parm) \
    prnt_f(_ZNode_NameFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Node__Name_P    _ZNode_NameFTAM, &_ZFTAM_mod

#define encode_FTAM_FADU__Lock(pe, top, len, buffer, parm) \
    enc_f(_ZFADU_LockFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_FADU__Lock(pe, top, len, buffer, parm) \
    dec_f(_ZFADU_LockFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_FADU__Lock(pe, top, len, buffer, parm) \
    prnt_f(_ZFADU_LockFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_FADU__Lock_P    _ZFADU_LockFTAM, &_ZFTAM_mod

#define encode_FTAM_Password(pe, top, len, buffer, parm) \
    enc_f(_ZPasswordFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Password(pe, top, len, buffer, parm) \
    dec_f(_ZPasswordFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Password(pe, top, len, buffer, parm) \
    prnt_f(_ZPasswordFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Password_P    _ZPasswordFTAM, &_ZFTAM_mod

#define encode_FTAM_Read__Attributes(pe, top, len, buffer, parm) \
    enc_f(_ZRead_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Read__Attributes(pe, top, len, buffer, parm) \
    dec_f(_ZRead_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Read__Attributes(pe, top, len, buffer, parm) \
    prnt_f(_ZRead_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Read__Attributes_P    _ZRead_AttributesFTAM, &_ZFTAM_mod

#define encode_FTAM_Select__Attributes(pe, top, len, buffer, parm) \
    enc_f(_ZSelect_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Select__Attributes(pe, top, len, buffer, parm) \
    dec_f(_ZSelect_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Select__Attributes(pe, top, len, buffer, parm) \
    prnt_f(_ZSelect_AttributesFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Select__Attributes_P    _ZSelect_AttributesFTAM, &_ZFTAM_mod

#define encode_FTAM_Shared__ASE__Information(pe, top, len, buffer, parm) \
    enc_f(_ZShared_ASE_InformationFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Shared__ASE__Information(pe, top, len, buffer, parm) \
    dec_f(_ZShared_ASE_InformationFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Shared__ASE__Information(pe, top, len, buffer, parm) \
    prnt_f(_ZShared_ASE_InformationFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Shared__ASE__Information_P    _ZShared_ASE_InformationFTAM, &_ZFTAM_mod

#define encode_FTAM_State__Result(pe, top, len, buffer, parm) \
    enc_f(_ZState_ResultFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_State__Result(pe, top, len, buffer, parm) \
    dec_f(_ZState_ResultFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_State__Result(pe, top, len, buffer, parm) \
    prnt_f(_ZState_ResultFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_State__Result_P    _ZState_ResultFTAM, &_ZFTAM_mod

#define encode_FTAM_User__Identity(pe, top, len, buffer, parm) \
    enc_f(_ZUser_IdentityFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_User__Identity(pe, top, len, buffer, parm) \
    dec_f(_ZUser_IdentityFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_User__Identity(pe, top, len, buffer, parm) \
    prnt_f(_ZUser_IdentityFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_User__Identity_P    _ZUser_IdentityFTAM, &_ZFTAM_mod

#define encode_FTAM_Access__Control__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZAccess_Control_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Access__Control__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZAccess_Control_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Access__Control__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZAccess_Control_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Access__Control__Attribute_P    _ZAccess_Control_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Access__Control__Change__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZAccess_Control_Change_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Access__Control__Change__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZAccess_Control_Change_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Access__Control__Change__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZAccess_Control_Change_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Access__Control__Change__Attribute_P    _ZAccess_Control_Change_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Access__Control__List(pe, top, len, buffer, parm) \
    enc_f(_ZAccess_Control_ListFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Access__Control__List(pe, top, len, buffer, parm) \
    dec_f(_ZAccess_Control_ListFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Access__Control__List(pe, top, len, buffer, parm) \
    prnt_f(_ZAccess_Control_ListFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Access__Control__List_P    _ZAccess_Control_ListFTAM, &_ZFTAM_mod

#define encode_FTAM_Access__Control__Element(pe, top, len, buffer, parm) \
    enc_f(_ZAccess_Control_ElementFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Access__Control__Element(pe, top, len, buffer, parm) \
    dec_f(_ZAccess_Control_ElementFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Access__Control__Element(pe, top, len, buffer, parm) \
    prnt_f(_ZAccess_Control_ElementFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Access__Control__Element_P    _ZAccess_Control_ElementFTAM, &_ZFTAM_mod

#define encode_FTAM_Concurrency__Access(pe, top, len, buffer, parm) \
    enc_f(_ZConcurrency_AccessFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Concurrency__Access(pe, top, len, buffer, parm) \
    dec_f(_ZConcurrency_AccessFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Concurrency__Access(pe, top, len, buffer, parm) \
    prnt_f(_ZConcurrency_AccessFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Concurrency__Access_P    _ZConcurrency_AccessFTAM, &_ZFTAM_mod

#define encode_FTAM_Concurrency__Key(pe, top, len, buffer, parm) \
    enc_f(_ZConcurrency_KeyFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Concurrency__Key(pe, top, len, buffer, parm) \
    dec_f(_ZConcurrency_KeyFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Concurrency__Key(pe, top, len, buffer, parm) \
    prnt_f(_ZConcurrency_KeyFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Concurrency__Key_P    _ZConcurrency_KeyFTAM, &_ZFTAM_mod

#define encode_FTAM_Account__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZAccount_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Account__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZAccount_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Account__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZAccount_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Account__Attribute_P    _ZAccount_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Contents__Type__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZContents_Type_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Contents__Type__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZContents_Type_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Contents__Type__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZContents_Type_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Contents__Type__Attribute_P    _ZContents_Type_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Date__and__Time__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZDate_and_Time_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Date__and__Time__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZDate_and_Time_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Date__and__Time__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZDate_and_Time_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Date__and__Time__Attribute_P    _ZDate_and_Time_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_File__Availability__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZFile_Availability_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_File__Availability__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZFile_Availability_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_File__Availability__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZFile_Availability_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_File__Availability__Attribute_P    _ZFile_Availability_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Filename__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZFilename_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Filename__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZFilename_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Filename__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZFilename_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Filename__Attribute_P    _ZFilename_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Filesize__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZFilesize_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Filesize__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZFilesize_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Filesize__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZFilesize_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Filesize__Attribute_P    _ZFilesize_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Legal__Qualification__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZLegal_Qualification_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Legal__Qualification__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZLegal_Qualification_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Legal__Qualification__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZLegal_Qualification_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Legal__Qualification__Attribute_P    _ZLegal_Qualification_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Permitted__Actions__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZPermitted_Actions_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Permitted__Actions__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZPermitted_Actions_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Permitted__Actions__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZPermitted_Actions_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Permitted__Actions__Attribute_P    _ZPermitted_Actions_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_Private__Use__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZPrivate_Use_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_Private__Use__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZPrivate_Use_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_Private__Use__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZPrivate_Use_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_Private__Use__Attribute_P    _ZPrivate_Use_AttributeFTAM, &_ZFTAM_mod

#define encode_FTAM_User__Identity__Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZUser_Identity_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char *) parm)

#define decode_FTAM_User__Identity__Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZUser_Identity_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer, (char **) parm)

#define print_FTAM_User__Identity__Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZUser_Identity_AttributeFTAM, &_ZFTAM_mod, pe, top, len, buffer)
#define print_FTAM_User__Identity__Attribute_P    _ZUser_Identity_AttributeFTAM, &_ZFTAM_mod


#endif   /* lint */
#ifndef	PEPYPATH
#include "ACS-types.h"
#include "FADU-types.h"
#else
#include "ACS-types.h"
#include "FADU-types.h"
#endif



#define	type_FTAM_Protocol__Version	PElement
#define	bits_FTAM_Protocol__Version	"\020\01version-1"
#define	bit_FTAM_Protocol__Version_version__1	0
#define	free_FTAM_Protocol__Version	pe_free

#define	type_FTAM_Implementation__Information	type_UNIV_GraphicString
#define	free_FTAM_Implementation__Information	free_UNIV_GraphicString

#define	type_FTAM_Service__Class	PElement
#define	bits_FTAM_Service__Class	"\020\01unconstrained-class\02management-class\03transfer-class\04transfer-and-management-class\05access-class"
#define	bit_FTAM_Service__Class_unconstrained__class	0
#define	bit_FTAM_Service__Class_management__class	1
#define	bit_FTAM_Service__Class_transfer__class	2
#define	bit_FTAM_Service__Class_transfer__and__management__class	3
#define	bit_FTAM_Service__Class_access__class	4
#define	free_FTAM_Service__Class	pe_free

#define	type_FTAM_Functional__Units	PElement
#define	bits_FTAM_Functional__Units	"\020\03read\04write\05file-access\06limited-file-management\07enhanced-file-management\010grouping\011fadu-locking\012recovery\013restart-data-transfer"
#define	bit_FTAM_Functional__Units_read	2
#define	bit_FTAM_Functional__Units_write	3
#define	bit_FTAM_Functional__Units_file__access	4
#define	bit_FTAM_Functional__Units_limited__file__management	5
#define	bit_FTAM_Functional__Units_enhanced__file__management	6
#define	bit_FTAM_Functional__Units_grouping	7
#define	bit_FTAM_Functional__Units_fadu__locking	8
#define	bit_FTAM_Functional__Units_recovery	9
#define	bit_FTAM_Functional__Units_restart__data__transfer	10
#define	free_FTAM_Functional__Units	pe_free

#define	type_FTAM_Attribute__Groups	PElement
#define	bits_FTAM_Attribute__Groups	"\020\01storage\02security\03private"
#define	bit_FTAM_Attribute__Groups_storage	0
#define	bit_FTAM_Attribute__Groups_security	1
#define	bit_FTAM_Attribute__Groups_private	2
#define	free_FTAM_Attribute__Groups	pe_free

#define	type_FTAM_F__TERMINATE__request	type_FTAM_Shared__ASE__Information
#define	free_FTAM_F__TERMINATE__request	free_FTAM_Shared__ASE__Information

#define	type_FTAM_F__DESELECT__request	type_FTAM_Shared__ASE__Information
#define	free_FTAM_F__DESELECT__request	free_FTAM_Shared__ASE__Information

#define	type_FTAM_F__DELETE__request	type_FTAM_Shared__ASE__Information
#define	free_FTAM_F__DELETE__request	free_FTAM_Shared__ASE__Information

#define	type_FTAM_F__READ__ATTRIB__request	type_FTAM_Attribute__Names
#define	free_FTAM_F__READ__ATTRIB__request	free_FTAM_Attribute__Names

#define	type_FTAM_Attribute__Names	PElement
#define	bits_FTAM_Attribute__Names	"\020\01read-filename\02read-permitted-actions\03read-content-types\04read-storage-account\05read-date-and-time-of-creation\06read-date-and-time-of-last-modification\07read-date-and-time-of-last-read-access\010read-date-and-time-of-last-attribute-modification\011read-identity-of-creator\012read-identity-of-last-modifier\013read-identity-of-last-reader\014read-identity-of-last-attribute-modifier\015read-file-availability\016read-filesize\017read-future-filesize\020read-access-control\021read-legal-qualifications\022read-private-use"
#define	bit_FTAM_Attribute__Names_read__filename	0
#define	bit_FTAM_Attribute__Names_read__permitted__actions	1
#define	bit_FTAM_Attribute__Names_read__content__types	2
#define	bit_FTAM_Attribute__Names_read__storage__account	3
#define	bit_FTAM_Attribute__Names_read__date__and__time__of__creation	4
#define	bit_FTAM_Attribute__Names_read__date__and__time__of__last__modification	5
#define	bit_FTAM_Attribute__Names_read__date__and__time__of__last__read__access	6
#define	bit_FTAM_Attribute__Names_read__date__and__time__of__last__attribute__modification	7
#define	bit_FTAM_Attribute__Names_read__identity__of__creator	8
#define	bit_FTAM_Attribute__Names_read__identity__of__last__modifier	9
#define	bit_FTAM_Attribute__Names_read__identity__of__last__reader	10
#define	bit_FTAM_Attribute__Names_read__identity__of__last__attribute__modifier	11
#define	bit_FTAM_Attribute__Names_read__file__availability	12
#define	bit_FTAM_Attribute__Names_read__filesize	13
#define	bit_FTAM_Attribute__Names_read__future__filesize	14
#define	bit_FTAM_Attribute__Names_read__access__control	15
#define	bit_FTAM_Attribute__Names_read__legal__qualifications	16
#define	bit_FTAM_Attribute__Names_read__private__use	17
#define	free_FTAM_Attribute__Names	pe_free

#define	type_FTAM_F__CHANGE__ATTRIB__request	type_FTAM_Change__Attributes
#define	free_FTAM_F__CHANGE__ATTRIB__request	free_FTAM_Change__Attributes

#define	type_FTAM_F__ERASE__request	type_FTAM_FADU__Identity
#define	free_FTAM_F__ERASE__request	free_FTAM_FADU__Identity

#define	type_FTAM_F__TRANSFER__END__request	type_FTAM_Shared__ASE__Information
#define	free_FTAM_F__TRANSFER__END__request	free_FTAM_Shared__ASE__Information

#define	type_FTAM_Abstract__Syntax__Name	OIDentifier
#define	free_FTAM_Abstract__Syntax__Name	oid_free

#define	type_FTAM_Access__Request	PElement
#define	bits_FTAM_Access__Request	"\020\01read\02insert\03replace\04extend\05erase\06read-attribute\07change-attribute\010delete"
#define	bit_FTAM_Access__Request_read	0
#define	bit_FTAM_Access__Request_insert	1
#define	bit_FTAM_Access__Request_replace	2
#define	bit_FTAM_Access__Request_extend	3
#define	bit_FTAM_Access__Request_erase	4
#define	bit_FTAM_Access__Request_read__attribute	5
#define	bit_FTAM_Access__Request_change__attribute	6
#define	bit_FTAM_Access__Request_delete	7
#define	free_FTAM_Access__Request	pe_free

#define	type_FTAM_Account	type_UNIV_GraphicString
#define	free_FTAM_Account	free_UNIV_GraphicString

#define	type_FTAM_Application__Entity__Title	type_ACS_AE__title
#define	free_FTAM_Application__Entity__Title	free_ACS_AE__title

#define	type_FTAM_Change__Attributes	type_FTAM_Read__Attributes
#define	free_FTAM_Change__Attributes	free_FTAM_Read__Attributes

#define	type_FTAM_Constraint__Set__Name	OIDentifier
#define	free_FTAM_Constraint__Set__Name	oid_free

#define	type_FTAM_Create__Attributes	type_FTAM_Read__Attributes
#define	free_FTAM_Create__Attributes	free_FTAM_Read__Attributes

#define	type_FTAM_Document__Type__Name	OIDentifier
#define	free_FTAM_Document__Type__Name	oid_free

#define	type_FTAM_Node__Name	type_FADU_Node__Name
#define	free_FTAM_Node__Name	free_FADU_Node__Name

#define	type_FTAM_Select__Attributes	type_FTAM_Read__Attributes
#define	free_FTAM_Select__Attributes	free_FTAM_Read__Attributes

#define	type_FTAM_Shared__ASE__Information	type_UNIV_EXTERNAL
#define	free_FTAM_Shared__ASE__Information	free_UNIV_EXTERNAL

#define	type_FTAM_User__Identity	type_UNIV_GraphicString
#define	free_FTAM_User__Identity	free_UNIV_GraphicString

#define	type_FTAM_Concurrency__Key	PElement
#define	bits_FTAM_Concurrency__Key	"\020\01not-required\02shared\03exclusive\04no-access"
#define	bit_FTAM_Concurrency__Key_not__required	0
#define	bit_FTAM_Concurrency__Key_shared	1
#define	bit_FTAM_Concurrency__Key_exclusive	2
#define	bit_FTAM_Concurrency__Key_no__access	3
#define	free_FTAM_Concurrency__Key	pe_free

#define	type_FTAM_Permitted__Actions__Attribute	PElement
#define	bits_FTAM_Permitted__Actions__Attribute	"\020\01read\02insert\03replace\04extend\05erase\06read-attribute\07change-attribute\010delete-file\011traversal\012reverse-traversal\013random-order"
#define	bit_FTAM_Permitted__Actions__Attribute_read	0
#define	bit_FTAM_Permitted__Actions__Attribute_insert	1
#define	bit_FTAM_Permitted__Actions__Attribute_replace	2
#define	bit_FTAM_Permitted__Actions__Attribute_extend	3
#define	bit_FTAM_Permitted__Actions__Attribute_erase	4
#define	bit_FTAM_Permitted__Actions__Attribute_read__attribute	5
#define	bit_FTAM_Permitted__Actions__Attribute_change__attribute	6
#define	bit_FTAM_Permitted__Actions__Attribute_delete__file	7
#define	bit_FTAM_Permitted__Actions__Attribute_traversal	8
#define	bit_FTAM_Permitted__Actions__Attribute_reverse__traversal	9
#define	bit_FTAM_Permitted__Actions__Attribute_random__order	10
#define	free_FTAM_Permitted__Actions__Attribute	pe_free

struct type_FTAM_PDU {
    int         offset;
#define	type_FTAM_PDU_f__initialize__request	1
#define	type_FTAM_PDU_f__initialize__response	2
#define	type_FTAM_PDU_f__terminate__request	3
#define	type_FTAM_PDU_f__terminate__response	4
#define	type_FTAM_PDU_f__u__abort__request	5
#define	type_FTAM_PDU_f__p__abort__request	6
#define	type_FTAM_PDU_f__select__request	7
#define	type_FTAM_PDU_f__select__response	8
#define	type_FTAM_PDU_f__deselect__request	9
#define	type_FTAM_PDU_f__deselect__response	10
#define	type_FTAM_PDU_f__create__request	11
#define	type_FTAM_PDU_f__create__response	12
#define	type_FTAM_PDU_f__delete__request	13
#define	type_FTAM_PDU_f__delete__response	14
#define	type_FTAM_PDU_f__read__attrib__request	15
#define	type_FTAM_PDU_f__read__attrib__response	16
#define	type_FTAM_PDU_f__change__attrib__request	17
#define	type_FTAM_PDU_f__change__attrib__response	18
#define	type_FTAM_PDU_f__open__request	19
#define	type_FTAM_PDU_f__open__response	20
#define	type_FTAM_PDU_f__close__request	21
#define	type_FTAM_PDU_f__close__response	22
#define	type_FTAM_PDU_f__begin__group__request	23
#define	type_FTAM_PDU_f__begin__group__response	24
#define	type_FTAM_PDU_f__end__group__request	25
#define	type_FTAM_PDU_f__end__group__response	26
#define	type_FTAM_PDU_f__recover__request	27
#define	type_FTAM_PDU_f__recover__response	28
#define	type_FTAM_PDU_f__locate__request	29
#define	type_FTAM_PDU_f__locate__response	30
#define	type_FTAM_PDU_f__erase__request	31
#define	type_FTAM_PDU_f__erase__response	32
#define	type_FTAM_PDU_f__read__request	33
#define	type_FTAM_PDU_f__write__request	34
#define	type_FTAM_PDU_f__data__end__request	35
#define	type_FTAM_PDU_f__transfer__end__request	36
#define	type_FTAM_PDU_f__transfer__end__response	37
#define	type_FTAM_PDU_f__cancel__request	38
#define	type_FTAM_PDU_f__cancel__response	39
#define	type_FTAM_PDU_f__restart__end__request	40
#define	type_FTAM_PDU_f__restart__end__response	41

    union {
        struct type_FTAM_F__INITIALIZE__request *f__initialize__request;

        struct type_FTAM_F__INITIALIZE__response *f__initialize__response;

        struct type_FTAM_F__TERMINATE__request *f__terminate__request;

        struct type_FTAM_F__TERMINATE__response *f__terminate__response;

        struct type_FTAM_F__U__ABORT__request *f__u__abort__request;

        struct type_FTAM_F__P__ABORT__request *f__p__abort__request;

        struct type_FTAM_F__SELECT__request *f__select__request;

        struct type_FTAM_F__SELECT__response *f__select__response;

        struct type_FTAM_F__DESELECT__request *f__deselect__request;

        struct type_FTAM_F__DESELECT__response *f__deselect__response;

        struct type_FTAM_F__CREATE__request *f__create__request;

        struct type_FTAM_F__CREATE__response *f__create__response;

        struct type_FTAM_F__DELETE__request *f__delete__request;

        struct type_FTAM_F__DELETE__response *f__delete__response;

        struct type_FTAM_F__READ__ATTRIB__request *f__read__attrib__request;

        struct type_FTAM_F__READ__ATTRIB__response *f__read__attrib__response;

        struct type_FTAM_F__CHANGE__ATTRIB__request *f__change__attrib__request;

        struct type_FTAM_F__CHANGE__ATTRIB__response *f__change__attrib__response;

        struct type_FTAM_F__OPEN__request *f__open__request;

        struct type_FTAM_F__OPEN__response *f__open__response;

        struct type_FTAM_F__CLOSE__request *f__close__request;

        struct type_FTAM_F__CLOSE__response *f__close__response;

        struct type_FTAM_F__BEGIN__GROUP__request *f__begin__group__request;

        struct type_FTAM_F__BEGIN__GROUP__response *f__begin__group__response;

        struct type_FTAM_F__END__GROUP__request *f__end__group__request;

        struct type_FTAM_F__END__GROUP__response *f__end__group__response;

        struct type_FTAM_F__RECOVER__request *f__recover__request;

        struct type_FTAM_F__RECOVER__response *f__recover__response;

        struct type_FTAM_F__LOCATE__request *f__locate__request;

        struct type_FTAM_F__LOCATE__response *f__locate__response;

        struct type_FTAM_F__ERASE__request *f__erase__request;

        struct type_FTAM_F__ERASE__response *f__erase__response;

        struct type_FTAM_F__READ__request *f__read__request;

        struct type_FTAM_F__WRITE__request *f__write__request;

        struct type_FTAM_F__DATA__END__request *f__data__end__request;

        struct type_FTAM_F__TRANSFER__END__request *f__transfer__end__request;

        struct type_FTAM_F__TRANSFER__END__response *f__transfer__end__response;

        struct type_FTAM_F__CANCEL__request *f__cancel__request;

        struct type_FTAM_F__CANCEL__response *f__cancel__response;

        struct type_FTAM_F__RESTART__END__request *f__restart__end__request;

        struct type_FTAM_F__RESTART__END__response *f__restart__end__response;
    }       un;
};
#define	free_FTAM_PDU(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZPDUFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_FTAM__Regime__PDU {
    int         offset;
#define	type_FTAM_FTAM__Regime__PDU_f__initialize__request	1
#define	type_FTAM_FTAM__Regime__PDU_f__initialize__response	2
#define	type_FTAM_FTAM__Regime__PDU_f__terminate__request	3
#define	type_FTAM_FTAM__Regime__PDU_f__terminate__response	4
#define	type_FTAM_FTAM__Regime__PDU_f__u__abort__request	5
#define	type_FTAM_FTAM__Regime__PDU_f__p__abort__request	6

    union {
        struct type_FTAM_F__INITIALIZE__request *f__initialize__request;

        struct type_FTAM_F__INITIALIZE__response *f__initialize__response;

        struct type_FTAM_F__TERMINATE__request *f__terminate__request;

        struct type_FTAM_F__TERMINATE__response *f__terminate__response;

        struct type_FTAM_F__U__ABORT__request *f__u__abort__request;

        struct type_FTAM_F__P__ABORT__request *f__p__abort__request;
    }       un;
};
#define	free_FTAM_FTAM__Regime__PDU(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZFTAM_Regime_PDUFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__INITIALIZE__request {
    struct type_FTAM_Protocol__Version *protocol__version;

    struct type_FTAM_Implementation__Information *implementation__information;

    char    presentation__context__management;

    struct type_FTAM_Service__Class *service__class;

    struct type_FTAM_Functional__Units *functional__units;

    struct type_FTAM_Attribute__Groups *attribute__groups;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_FTAM__Quality__Of__Service *ftam__quality__of__service;

    struct type_FTAM_Contents__Type__List *contents__type__list;

    struct type_FTAM_User__Identity *initiator__identity;

    struct type_FTAM_Account *account;

    struct type_FTAM_Password *filestore__password;

    integer     checkpoint__window;
};
#define	free_FTAM_F__INITIALIZE__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_INITIALIZE_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__INITIALIZE__response {
    struct type_FTAM_State__Result *state__result;

    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Protocol__Version *protocol__version;

    struct type_FTAM_Implementation__Information *implementation__information;

    char    presentation__context__management;

    struct type_FTAM_Service__Class *service__class;

    struct type_FTAM_Functional__Units *functional__units;

    struct type_FTAM_Attribute__Groups *attribute__groups;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_FTAM__Quality__Of__Service *ftam__quality__of__service;

    struct type_FTAM_Contents__Type__List *contents__type__list;

    struct type_FTAM_Diagnostic *diagnostic;

    integer     checkpoint__window;
};
#define	free_FTAM_F__INITIALIZE__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_INITIALIZE_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_FTAM__Quality__Of__Service {
    integer     parm;
#define	int_FTAM_FTAM__Quality__Of__Service_no__recovery	0
#define	int_FTAM_FTAM__Quality__Of__Service_class__1__recovery	1
#define	int_FTAM_FTAM__Quality__Of__Service_class__2__recovery	2
#define	int_FTAM_FTAM__Quality__Of__Service_class__3__recovery	3
};
#define	free_FTAM_FTAM__Quality__Of__Service(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZFTAM_Quality_Of_ServiceFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Contents__Type__List {
        struct type_FTAM_Document__Type__Name *Document__Type__Name;

        struct type_FTAM_Contents__Type__List *next;
};
#define	free_FTAM_Contents__Type__List(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZContents_Type_ListFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__TERMINATE__response {
    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Charging *charging;
};
#define	free_FTAM_F__TERMINATE__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_TERMINATE_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__U__ABORT__request {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__U__ABORT__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_U_ABORT_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__P__ABORT__request {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__P__ABORT__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_P_ABORT_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_File__PDU {
    int         offset;
#define	type_FTAM_File__PDU_f__select__request	1
#define	type_FTAM_File__PDU_f__select__response	2
#define	type_FTAM_File__PDU_f__deselect__request	3
#define	type_FTAM_File__PDU_f__deselect__response	4
#define	type_FTAM_File__PDU_f__create__request	5
#define	type_FTAM_File__PDU_f__create__response	6
#define	type_FTAM_File__PDU_f__delete__request	7
#define	type_FTAM_File__PDU_f__delete__response	8
#define	type_FTAM_File__PDU_f__read__attrib__request	9
#define	type_FTAM_File__PDU_f__read__attrib__response	10
#define	type_FTAM_File__PDU_f__change__attrib__request	11
#define	type_FTAM_File__PDU_f__change__attrib__response	12
#define	type_FTAM_File__PDU_f__open__request	13
#define	type_FTAM_File__PDU_f__open__response	14
#define	type_FTAM_File__PDU_f__close__request	15
#define	type_FTAM_File__PDU_f__close__response	16
#define	type_FTAM_File__PDU_f__begin__group__request	17
#define	type_FTAM_File__PDU_f__begin__group__response	18
#define	type_FTAM_File__PDU_f__end__group__request	19
#define	type_FTAM_File__PDU_f__end__group__response	20
#define	type_FTAM_File__PDU_f__recover__request	21
#define	type_FTAM_File__PDU_f__recover__response	22
#define	type_FTAM_File__PDU_f__locate__request	23
#define	type_FTAM_File__PDU_f__locate__response	24
#define	type_FTAM_File__PDU_f__erase__request	25
#define	type_FTAM_File__PDU_f__erase__response	26

    union {
        struct type_FTAM_F__SELECT__request *f__select__request;

        struct type_FTAM_F__SELECT__response *f__select__response;

        struct type_FTAM_F__DESELECT__request *f__deselect__request;

        struct type_FTAM_F__DESELECT__response *f__deselect__response;

        struct type_FTAM_F__CREATE__request *f__create__request;

        struct type_FTAM_F__CREATE__response *f__create__response;

        struct type_FTAM_F__DELETE__request *f__delete__request;

        struct type_FTAM_F__DELETE__response *f__delete__response;

        struct type_FTAM_F__READ__ATTRIB__request *f__read__attrib__request;

        struct type_FTAM_F__READ__ATTRIB__response *f__read__attrib__response;

        struct type_FTAM_F__CHANGE__ATTRIB__request *f__change__attrib__request;

        struct type_FTAM_F__CHANGE__ATTRIB__response *f__change__attrib__response;

        struct type_FTAM_F__OPEN__request *f__open__request;

        struct type_FTAM_F__OPEN__response *f__open__response;

        struct type_FTAM_F__CLOSE__request *f__close__request;

        struct type_FTAM_F__CLOSE__response *f__close__response;

        struct type_FTAM_F__BEGIN__GROUP__request *f__begin__group__request;

        struct type_FTAM_F__BEGIN__GROUP__response *f__begin__group__response;

        struct type_FTAM_F__END__GROUP__request *f__end__group__request;

        struct type_FTAM_F__END__GROUP__response *f__end__group__response;

        struct type_FTAM_F__RECOVER__request *f__recover__request;

        struct type_FTAM_F__RECOVER__response *f__recover__response;

        struct type_FTAM_F__LOCATE__request *f__locate__request;

        struct type_FTAM_F__LOCATE__response *f__locate__response;

        struct type_FTAM_F__ERASE__request *f__erase__request;

        struct type_FTAM_F__ERASE__response *f__erase__response;
    }       un;
};
#define	free_FTAM_File__PDU(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZFile_PDUFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__SELECT__request {
    struct type_FTAM_Select__Attributes *attributes;

    struct type_FTAM_Access__Request *requested__access;

    struct type_FTAM_Access__Passwords *access__passwords;

    struct type_FTAM_Concurrency__Control *concurrency__control;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Account *account;
};
#define	free_FTAM_F__SELECT__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_SELECT_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__SELECT__response {
    struct type_FTAM_State__Result *state__result;

    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Select__Attributes *attributes;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__SELECT__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_SELECT_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__DESELECT__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Charging *charging;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__DESELECT__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_DESELECT_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__CREATE__request {
    integer     override;
#define	int_FTAM_override_create__failure	0
#define	int_FTAM_override_select__old__file	1
#define	int_FTAM_override_delete__and__create__with__old__attributes	2
#define	int_FTAM_override_delete__and__create__with__new__attributes	3

    struct type_FTAM_Create__Attributes *initial__attributes;

    struct type_FTAM_Password *create__password;

    struct type_FTAM_Access__Request *requested__access;

    struct type_FTAM_Access__Passwords *access__passwords;

    struct type_FTAM_Concurrency__Control *concurrency__control;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Account *account;
};
#define	free_FTAM_F__CREATE__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_CREATE_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__CREATE__response {
    struct type_FTAM_State__Result *state__result;

    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Create__Attributes *initial__attributes;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__CREATE__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_CREATE_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__DELETE__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Charging *charging;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__DELETE__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_DELETE_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__READ__ATTRIB__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Read__Attributes *attributes;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__READ__ATTRIB__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_READ_ATTRIB_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__CHANGE__ATTRIB__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Change__Attributes *attributes;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__CHANGE__ATTRIB__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_CHANGE_ATTRIB_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__OPEN__request {
    PE      processing__mode;
#define	bits_FTAM_processing__mode	"\020\01f-read\02f-insert\03f-replace\04f-extend\05f-erase"
#define	bit_FTAM_processing__mode_f__read	0
#define	bit_FTAM_processing__mode_f__insert	1
#define	bit_FTAM_processing__mode_f__replace	2
#define	bit_FTAM_processing__mode_f__extend	3
#define	bit_FTAM_processing__mode_f__erase	4

    struct choice_FTAM_0 {
        int         offset;
#define	choice_FTAM_0_unknown	1
#define	choice_FTAM_0_proposed	2

        union {
            char    unknown;

            struct type_FTAM_Contents__Type__Attribute *proposed;
        }       un;
    } *contents__type;

    struct type_FTAM_Concurrency__Control *concurrency__control;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    char    enable__fadu__locking;

    struct type_FTAM_Activity__Identifier *activity__identifier;

    integer     recovery__mode;
#define	int_FTAM_recovery__mode_none	0
#define	int_FTAM_recovery__mode_at__start__of__file	1
#define	int_FTAM_recovery__mode_at__any__active__checkpoint	2

    struct member_FTAM_0 {
        struct type_FTAM_Abstract__Syntax__Name *Abstract__Syntax__Name;

        struct member_FTAM_0 *next;
    } *remove__contexts;

    struct member_FTAM_1 {
        struct type_FTAM_Abstract__Syntax__Name *Abstract__Syntax__Name;

        struct member_FTAM_1 *next;
    } *define__contexts;
};
#define	free_FTAM_F__OPEN__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_OPEN_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__OPEN__response {
    struct type_FTAM_State__Result *state__result;

    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Contents__Type__Attribute *contents__type;

    struct type_FTAM_Concurrency__Control *concurrency__control;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;

    integer     recovery__mode;
#define	int_FTAM_recovery__mode_none	0
#define	int_FTAM_recovery__mode_at__start__of__file	1
#define	int_FTAM_recovery__mode_at__any__active__checkpoint	2

    char    presentation__action;
};
#define	free_FTAM_F__OPEN__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_OPEN_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__CLOSE__request {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__CLOSE__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_CLOSE_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__CLOSE__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__CLOSE__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_CLOSE_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__BEGIN__GROUP__request {
    integer     parm;
};
#define	free_FTAM_F__BEGIN__GROUP__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_BEGIN_GROUP_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__BEGIN__GROUP__response {
    char    dummy;
};
#define	free_FTAM_F__BEGIN__GROUP__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_BEGIN_GROUP_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__END__GROUP__request {
    char    dummy;
};
#define	free_FTAM_F__END__GROUP__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_END_GROUP_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__END__GROUP__response {
    char    dummy;
};
#define	free_FTAM_F__END__GROUP__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_END_GROUP_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__RECOVER__request {
    struct type_FTAM_Activity__Identifier *activity__identifier;

    integer     bulk__transfer__number;

    struct type_FTAM_Access__Request *requested__access;

    struct type_FTAM_Access__Passwords *access__passwords;

    integer     recovery__point;

    struct member_FTAM_2 {
        struct type_FTAM_Abstract__Syntax__Name *Abstract__Syntax__Name;

        struct member_FTAM_2 *next;
    } *remove__contexts;

    struct member_FTAM_3 {
        struct type_FTAM_Abstract__Syntax__Name *Abstract__Syntax__Name;

        struct member_FTAM_3 *next;
    } *define__contexts;
};
#define	free_FTAM_F__RECOVER__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_RECOVER_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__RECOVER__response {
    struct type_FTAM_State__Result *state__result;

    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Contents__Type__Attribute *contents__type;

    integer     recovery__point;

    struct type_FTAM_Diagnostic *diagnostic;

    char    presentation__action;
};
#define	free_FTAM_F__RECOVER__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_RECOVER_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__LOCATE__request {
    struct type_FTAM_FADU__Identity *file__access__data__unit__identity;

    struct type_FTAM_FADU__Lock *fadu__lock;
};
#define	free_FTAM_F__LOCATE__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_LOCATE_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__LOCATE__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_FADU__Identity *file__access__data__unit__identity;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__LOCATE__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_LOCATE_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__ERASE__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__ERASE__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_ERASE_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Bulk__Data__PDU {
    int         offset;
#define	type_FTAM_Bulk__Data__PDU_f__read__request	1
#define	type_FTAM_Bulk__Data__PDU_f__write__request	2
#define	type_FTAM_Bulk__Data__PDU_f__data__end__request	3
#define	type_FTAM_Bulk__Data__PDU_f__transfer__end__request	4
#define	type_FTAM_Bulk__Data__PDU_f__transfer__end__response	5
#define	type_FTAM_Bulk__Data__PDU_f__cancel__request	6
#define	type_FTAM_Bulk__Data__PDU_f__cancel__response	7
#define	type_FTAM_Bulk__Data__PDU_f__restart__end__request	8
#define	type_FTAM_Bulk__Data__PDU_f__restart__end__response	9

    union {
        struct type_FTAM_F__READ__request *f__read__request;

        struct type_FTAM_F__WRITE__request *f__write__request;

        struct type_FTAM_F__DATA__END__request *f__data__end__request;

        struct type_FTAM_F__TRANSFER__END__request *f__transfer__end__request;

        struct type_FTAM_F__TRANSFER__END__response *f__transfer__end__response;

        struct type_FTAM_F__CANCEL__request *f__cancel__request;

        struct type_FTAM_F__CANCEL__response *f__cancel__response;

        struct type_FTAM_F__RESTART__END__request *f__restart__end__request;

        struct type_FTAM_F__RESTART__END__response *f__restart__end__response;
    }       un;
};
#define	free_FTAM_Bulk__Data__PDU(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZBulk_Data_PDUFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__READ__request {
    struct type_FTAM_FADU__Identity *file__access__data__unit__identity;

    struct type_FTAM_Access__Context *access__context;

    struct type_FTAM_FADU__Lock *fadu__lock;
};
#define	free_FTAM_F__READ__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_READ_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__WRITE__request {
    integer     file__access__data__unit__operation;
#define	int_FTAM_file__access__data__unit__operation_insert	0
#define	int_FTAM_file__access__data__unit__operation_replace	1
#define	int_FTAM_file__access__data__unit__operation_extend	2

    struct type_FTAM_FADU__Identity *file__access__data__unit__identity;

    struct type_FTAM_FADU__Lock *fadu__lock;
};
#define	free_FTAM_F__WRITE__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_WRITE_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__DATA__END__request {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__DATA__END__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_DATA_END_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__TRANSFER__END__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__TRANSFER__END__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_TRANSFER_END_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__CANCEL__request {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__CANCEL__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_CANCEL_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__CANCEL__response {
    struct type_FTAM_Action__Result *action__result;

    struct type_FTAM_Shared__ASE__Information *shared__ASE__information;

    struct type_FTAM_Diagnostic *diagnostic;
};
#define	free_FTAM_F__CANCEL__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_CANCEL_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__RESTART__END__request {
    integer     parm;
};
#define	free_FTAM_F__RESTART__END__request(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_RESTART_END_requestFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_F__RESTART__END__response {
    integer     parm;
};
#define	free_FTAM_F__RESTART__END__response(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZF_RESTART_END_responseFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Access__Context {
    integer     optionals;
#define	opt_FTAM_Access__Context_level__number (000000001)

    integer     access__context;
#define	int_FTAM_access__context_hierarchical__all__data__units	0
#define	int_FTAM_access__context_hierarchical__no__data__units	1
#define	int_FTAM_access__context_flat__all__data__units	2
#define	int_FTAM_access__context_flat__one__level__units	3
#define	int_FTAM_access__context_flat__single__data__units	4
#define	int_FTAM_access__context_unstructured__all__data__units	5
#define	int_FTAM_access__context_unstructured__single__data__unit	6

    integer     level__number;
};
#define	free_FTAM_Access__Context(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZAccess_ContextFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Access__Passwords {
    struct type_FTAM_Password *read__password;

    struct type_FTAM_Password *insert__password;

    struct type_FTAM_Password *replace__password;

    struct type_FTAM_Password *extend__password;

    struct type_FTAM_Password *erase__password;

    struct type_FTAM_Password *read__attribute__password;

    struct type_FTAM_Password *change__attribute__password;

    struct type_FTAM_Password *delete__password;
};
#define	free_FTAM_Access__Passwords(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZAccess_PasswordsFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Action__Result {
    integer     parm;
#define	int_FTAM_Action__Result_success	0
#define	int_FTAM_Action__Result_transient__error	1
#define	int_FTAM_Action__Result_permanent__error	2
};
#define	free_FTAM_Action__Result(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZAction_ResultFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Activity__Identifier {
    integer     parm;
};
#define	free_FTAM_Activity__Identifier(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZActivity_IdentifierFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Charging {
        struct charge_element {
            struct	qbuf	*resource__identifier;

            struct	qbuf	*charging__unit;

            integer     charging__value;
        } *charge;

        struct type_FTAM_Charging *next;
};
#define	free_FTAM_Charging(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZChargingFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Concurrency__Control {
    struct type_FTAM_Lock *read;

    struct type_FTAM_Lock *insert;

    struct type_FTAM_Lock *replace;

    struct type_FTAM_Lock *extend;

    struct type_FTAM_Lock *erase;

    struct type_FTAM_Lock *read__attribute;

    struct type_FTAM_Lock *change__attribute;

    struct type_FTAM_Lock *delete;
};
#define	free_FTAM_Concurrency__Control(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZConcurrency_ControlFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Lock {
    integer     parm;
#define	int_FTAM_Lock_not__required	0
#define	int_FTAM_Lock_shared	1
#define	int_FTAM_Lock_exclusive	2
#define	int_FTAM_Lock_no__access	3
};
#define	free_FTAM_Lock(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZLockFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Diagnostic {
        struct diag_element {
            integer     optionals;
#define	opt_FTAM_diag_element_suggested__delay (000000001)

            integer     diagnostic__type;
#define	int_FTAM_diagnostic__type_informative	0
#define	int_FTAM_diagnostic__type_transient	1
#define	int_FTAM_diagnostic__type_permanent	2

            integer     error__identifier;

            struct type_FTAM_Entity__Reference *error__observer;

            struct type_FTAM_Entity__Reference *error__source;

            integer     suggested__delay;

            struct	qbuf	*further__details;
        } *diagnostic;

        struct type_FTAM_Diagnostic *next;
};
#define	free_FTAM_Diagnostic(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZDiagnosticFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Entity__Reference {
    integer     parm;
#define	int_FTAM_Entity__Reference_no__categorization__possible	0
#define	int_FTAM_Entity__Reference_initiating__file__service__user	1
#define	int_FTAM_Entity__Reference_initiating__file__protocol__machine	2
#define	int_FTAM_Entity__Reference_service__supporting__the__file__protocol__machine	3
#define	int_FTAM_Entity__Reference_responding__file__protocol__machine	4
#define	int_FTAM_Entity__Reference_responding__file__service__user	5
};
#define	free_FTAM_Entity__Reference(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZEntity_ReferenceFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_FADU__Identity {
    int         offset;
#define	type_FTAM_FADU__Identity_first__last	1
#define	type_FTAM_FADU__Identity_relative	2
#define	type_FTAM_FADU__Identity_begin__end	3
#define	type_FTAM_FADU__Identity_single__name	4
#define	type_FTAM_FADU__Identity_name__list	5
#define	type_FTAM_FADU__Identity_fadu__number	6

    union {
        integer     first__last;
#define	int_FTAM_first__last_first	0
#define	int_FTAM_first__last_last	1

        integer     relative;
#define	int_FTAM_relative_previous	0
#define	int_FTAM_relative_current	1
#define	int_FTAM_relative_next	2

        integer     begin__end;
#define	int_FTAM_begin__end_begin	0
#define	int_FTAM_begin__end_end	1

        struct type_FTAM_Node__Name *single__name;

        struct name_element {
            struct type_FTAM_Node__Name *Node__Name;

            struct name_element *next;
        } *name__list;

        integer     fadu__number;
    }       un;
};
#define	free_FTAM_FADU__Identity(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZFADU_IdentityFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_FADU__Lock {
    integer     parm;
#define	int_FTAM_FADU__Lock_off	0
#define	int_FTAM_FADU__Lock_on	1
};
#define	free_FTAM_FADU__Lock(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZFADU_LockFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Password {
    int         offset;
#define	type_FTAM_Password_graphic	1
#define	type_FTAM_Password_binary	2

    union {
        struct	qbuf	*graphic;

        struct qbuf *binary;
    }       un;
};
#define	free_FTAM_Password(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZPasswordFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Read__Attributes {
    struct type_FTAM_Filename__Attribute *filename;

    struct type_FTAM_Permitted__Actions__Attribute *permitted__actions;

    struct type_FTAM_Contents__Type__Attribute *contents__type;

    struct type_FTAM_Account__Attribute *storage__account;

    struct type_FTAM_Date__and__Time__Attribute *date__and__time__of__creation;

    struct type_FTAM_Date__and__Time__Attribute *date__and__time__of__last__modification;

    struct type_FTAM_Date__and__Time__Attribute *date__and__time__of__last__read__access;

    struct type_FTAM_Date__and__Time__Attribute *date__and__time__of__last__attribute__modification;

    struct type_FTAM_User__Identity__Attribute *identity__of__creator;

    struct type_FTAM_User__Identity__Attribute *identity__of__last__modifier;

    struct type_FTAM_User__Identity__Attribute *identity__of__last__reader;

    struct type_FTAM_User__Identity__Attribute *identity__of__last__attribute__modifier;

    struct type_FTAM_File__Availability__Attribute *file__availability;

    struct type_FTAM_Filesize__Attribute *filesize;

    struct type_FTAM_Filesize__Attribute *future__filesize;

    struct type_FTAM_Access__Control__Attribute *access__control;

    struct type_FTAM_Legal__Qualification__Attribute *legal__qualification;

    struct type_FTAM_Private__Use__Attribute *private__use;
};
#define	free_FTAM_Read__Attributes(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZRead_AttributesFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_State__Result {
    integer     parm;
#define	int_FTAM_State__Result_success	0
#define	int_FTAM_State__Result_failure	1
};
#define	free_FTAM_State__Result(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZState_ResultFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Access__Control__Attribute {
    int         offset;
#define	type_FTAM_Access__Control__Attribute_no__value__available	1
#define	type_FTAM_Access__Control__Attribute_actual__values	2

    union {
        char    no__value__available;

        struct type_FTAM_Access__Control__List *actual__values;
    }       un;
};
#define	free_FTAM_Access__Control__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZAccess_Control_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Access__Control__Change__Attribute {
    int         offset;
#define	type_FTAM_Access__Control__Change__Attribute_no__value__available	1
#define	type_FTAM_Access__Control__Change__Attribute_actual__values	2

    union {
        char    no__value__available;

        struct element_FTAM_2 {
            struct type_FTAM_Access__Control__List *insert__values;

            struct type_FTAM_Access__Control__List *delete__values;
        } *actual__values;
    }       un;
};
#define	free_FTAM_Access__Control__Change__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZAccess_Control_Change_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Access__Control__List {
        struct type_FTAM_Access__Control__Element *Access__Control__Element;

        struct type_FTAM_Access__Control__List *next;
};
#define	free_FTAM_Access__Control__List(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZAccess_Control_ListFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Access__Control__Element {
    struct type_FTAM_Access__Request *action__list;

    struct type_FTAM_Concurrency__Access *concurrency__access;

    struct type_FTAM_User__Identity *identity;

    struct type_FTAM_Access__Passwords *passwords;

    struct type_FTAM_Application__Entity__Title *location;
};
#define	free_FTAM_Access__Control__Element(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZAccess_Control_ElementFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Concurrency__Access {
    struct type_FTAM_Concurrency__Key *read;

    struct type_FTAM_Concurrency__Key *insert;

    struct type_FTAM_Concurrency__Key *replace;

    struct type_FTAM_Concurrency__Key *extend;

    struct type_FTAM_Concurrency__Key *erase;

    struct type_FTAM_Concurrency__Key *read__attribute;

    struct type_FTAM_Concurrency__Key *change__attribute;

    struct type_FTAM_Concurrency__Key *delete;
};
#define	free_FTAM_Concurrency__Access(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZConcurrency_AccessFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Account__Attribute {
    int         offset;
#define	type_FTAM_Account__Attribute_no__value__available	1
#define	type_FTAM_Account__Attribute_actual__values	2

    union {
        char    no__value__available;

        struct type_FTAM_Account *actual__values;
    }       un;
};
#define	free_FTAM_Account__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZAccount_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Contents__Type__Attribute {
    struct type_FTAM_Document__Type__Name *document__type__name;

    PE      parameter;
};
#define	free_FTAM_Contents__Type__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZContents_Type_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Date__and__Time__Attribute {
    int         offset;
#define	type_FTAM_Date__and__Time__Attribute_no__value__available	1
#define	type_FTAM_Date__and__Time__Attribute_actual__values	2

    union {
        char    no__value__available;

        struct	qbuf	*actual__values;
    }       un;
};
#define	free_FTAM_Date__and__Time__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZDate_and_Time_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_File__Availability__Attribute {
    int         offset;
#define	type_FTAM_File__Availability__Attribute_no__value__available	1
#define	type_FTAM_File__Availability__Attribute_actual__values	2

    union {
        char    no__value__available;

        integer     actual__values;
#define	int_FTAM_actual__values_immediate__availability	0
#define	int_FTAM_actual__values_deferred__availability	1
    }       un;
};
#define	free_FTAM_File__Availability__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZFile_Availability_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Filename__Attribute {
        struct	qbuf	*GraphicString;

        struct type_FTAM_Filename__Attribute *next;
};
#define	free_FTAM_Filename__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZFilename_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Filesize__Attribute {
    int         offset;
#define	type_FTAM_Filesize__Attribute_no__value__available	1
#define	type_FTAM_Filesize__Attribute_actual__values	2

    union {
        char    no__value__available;

        integer     actual__values;
    }       un;
};
#define	free_FTAM_Filesize__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZFilesize_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Legal__Qualification__Attribute {
    int         offset;
#define	type_FTAM_Legal__Qualification__Attribute_no__value__available	1
#define	type_FTAM_Legal__Qualification__Attribute_actual__values	2

    union {
        char    no__value__available;

        struct	qbuf	*actual__values;
    }       un;
};
#define	free_FTAM_Legal__Qualification__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZLegal_Qualification_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_Private__Use__Attribute {
    int         offset;
#define	type_FTAM_Private__Use__Attribute_no__value__available	1
#define	type_FTAM_Private__Use__Attribute_abstract__syntax__not__supported	2
#define	type_FTAM_Private__Use__Attribute_actual__values	3

    union {
        char    no__value__available;

        char    abstract__syntax__not__supported;

        struct	type_UNIV_EXTERNAL	*actual__values;
    }       un;
};
#define	free_FTAM_Private__Use__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZPrivate_Use_AttributeFTAM], &_ZFTAM_mod, 1)

struct type_FTAM_User__Identity__Attribute {
    int         offset;
#define	type_FTAM_User__Identity__Attribute_no__value__available	1
#define	type_FTAM_User__Identity__Attribute_actual__values	2

    union {
        char    no__value__available;

        struct type_FTAM_User__Identity *actual__values;
    }       un;
};
#define	free_FTAM_User__Identity__Attribute(parm)\
	 fre_obj((char *) parm, _ZFTAM_mod.md_dtab[_ZUser_Identity_AttributeFTAM], &_ZFTAM_mod, 1)
#endif
